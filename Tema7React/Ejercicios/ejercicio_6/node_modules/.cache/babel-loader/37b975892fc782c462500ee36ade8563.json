{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/angela/Documents/repo_github/fswd/Tema7React/Ejercicios/ejercicio_6/src/components/Formulario.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { GlobalContext } from \"../App\";\nexport default function Formulario() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [province, setProvince] = useState(\"\");\n  const [postcode, setPostcode] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      name: name,\n      lastName: lastName,\n      address: address,\n      province: province,\n      postcode: postcode,\n      phone: phone\n    };\n    setContacts(prevContacts => [...prevContacts, newContact]); // La función setContacts (como cualquier función setXxx) siempre recibe como primer parámetro\n    // el estado prevContacts, es decir el último estado guardado.\n    // Gracias a eso, podemos utilizar el estado previo sin tener que pasárselo a Formulario\n    // arriba del todo, sino simplemente poniendolo en los paréntesis de nuestra función setContacts(prevContacts)\n\n    setName(\"\");\n    setLastName(\"\");\n    setAddress(\"\");\n    setProvince(\"\");\n    setPostcode(\"\");\n    setPhone(\"\");\n  };\n\n  const handleName = event => {\n    setName(event.target.value);\n  };\n\n  const handleLastName = event => {\n    setLastName(event.target.value);\n  };\n\n  const handleAddress = event => {\n    setAddress(event.target.value);\n  };\n\n  const handleProvince = event => {\n    setProvince(event.target.value);\n  };\n\n  const handlePostcode = event => {\n    setPostcode(event.target.value);\n  };\n\n  const handlePhone = event => {\n    setPhone(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-group\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control mb-3\",\n      placeholder: \"Name\",\n      value: name,\n      onChange: handleName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control mb-3\",\n      placeholder: \"Last Name\",\n      value: lastName,\n      onChange: handleLastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control mb-3\",\n      placeholder: \"Address\",\n      value: address,\n      onChange: handleAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control mb-3\",\n      placeholder: \"Province\",\n      value: province,\n      onChange: handleProvince\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control mb-3\",\n      placeholder: \"Postcode\",\n      value: postcode,\n      onChange: handlePostcode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control mb-3\",\n      placeholder: \"Phone\",\n      value: phone,\n      onChange: handlePhone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Add contact\",\n      className: \"btn btn-success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Formulario, \"4GxAkEVS7MyswUuHvl4ubSIFmqY=\");\n\n_c = Formulario;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formulario\");","map":{"version":3,"sources":["/home/angela/Documents/repo_github/fswd/Tema7React/Ejercicios/ejercicio_6/src/components/Formulario.js"],"names":["useContext","GlobalContext","Formulario","name","setName","useState","lastName","setLastName","address","setAddress","province","setProvince","postcode","setPostcode","phone","setPhone","handleSubmit","event","preventDefault","newContact","setContacts","prevContacts","handleName","target","value","handleLastName","handleAddress","handleProvince","handlePostcode","handlePhone"],"mappings":"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","sourcesContent":["import { useContext } from \"react\";\nimport { GlobalContext } from \"../App\";\n\nexport default function Formulario() {\n\n    const [name, setName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [province, setProvince] = useState(\"\");\n    const [postcode, setPostcode] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        const newContact = {\n            name: name,\n            lastName: lastName,\n            address: address,\n            province: province,\n            postcode: postcode,\n            phone: phone,\n        };\n        \n        setContacts(prevContacts => [...prevContacts, newContact]);\n\n    // La función setContacts (como cualquier función setXxx) siempre recibe como primer parámetro\n    // el estado prevContacts, es decir el último estado guardado.\n    // Gracias a eso, podemos utilizar el estado previo sin tener que pasárselo a Formulario\n    // arriba del todo, sino simplemente poniendolo en los paréntesis de nuestra función setContacts(prevContacts)\n\n        setName(\"\");\n        setLastName(\"\");\n        setAddress(\"\");\n        setProvince(\"\");\n        setPostcode(\"\");\n        setPhone(\"\");\n    }\n\n    const handleName = (event) => {\n        setName(event.target.value);\n    }\n\n    const handleLastName = (event) => {\n        setLastName(event.target.value);\n    }\n\n    const handleAddress = (event) => {\n        setAddress(event.target.value);\n    }\n\n    const handleProvince = (event) => {\n        setProvince(event.target.value);\n    }\n\n    const handlePostcode = (event) => {\n        setPostcode(event.target.value);\n    }\n\n    const handlePhone = (event) => {\n        setPhone(event.target.value);\n    }\n\n    return (\n        <form className=\"form-group\" onSubmit={handleSubmit}>\n            <h1>New contact</h1>\n            <input type=\"text\" className=\"form-control mb-3\" placeholder=\"Name\" value={name} onChange={handleName}/>\n            <input type=\"text\" className=\"form-control mb-3\" placeholder=\"Last Name\" value={lastName} onChange={handleLastName}/> \n            <input type=\"text\" className=\"form-control mb-3\" placeholder=\"Address\" value={address} onChange={handleAddress}/> \n            <input type=\"text\" className=\"form-control mb-3\" placeholder=\"Province\" value={province} onChange={handleProvince}/> \n            <input type=\"text\" className=\"form-control mb-3\" placeholder=\"Postcode\" value={postcode} onChange={handlePostcode}/> \n            <input type=\"text\" className=\"form-control mb-3\" placeholder=\"Phone\" value={phone} onChange={handlePhone}/> \n            <input type=\"submit\" value=\"Add contact\" className=\"btn btn-success\"/>         \n        </form>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}